{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ranga\\\\Documents\\\\ToDo\\\\client\\\\src\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/auth/check', {\n          credentials: 'include'\n        });\n        const data = await response.json();\n        setIsAuthenticated(data.authenticated);\n      } catch (error) {\n        console.error('Auth check error:', error);\n        setIsAuthenticated(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n\n  // Show loading spinner while checking authentication\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-32 w-32 border-b-2 border-indigo-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated, render the protected component\n  return children;\n}\n_s(ProtectedRoute, \"6M0T6wddrmS10OcFc8VlSqW6jTc=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useEffect","useState","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkAuthStatus","response","fetch","credentials","data","json","authenticated","error","console","className","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/Ranga/Documents/ToDo/client/src/ProtectedRoute.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ children }) {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkAuthStatus = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/auth/check', {\r\n          credentials: 'include'\r\n        });\r\n        const data = await response.json();\r\n        \r\n        setIsAuthenticated(data.authenticated);\r\n      } catch (error) {\r\n        console.error('Auth check error:', error);\r\n        setIsAuthenticated(false);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  // Show loading spinner while checking authentication\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-indigo-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If not authenticated, redirect to login\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // If authenticated, render the protected component\r\n  return children;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAElCR,kBAAkB,CAACO,IAAI,CAACE,aAAa,CAAC;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCV,kBAAkB,CAAC,KAAK,CAAC;MAC3B,CAAC,SAAS;QACRE,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIF,SAAS,EAAE;IACb,oBACEN,OAAA;MAAKiB,SAAS,EAAC,2CAA2C;MAAAf,QAAA,eACxDF,OAAA;QAAKiB,SAAS,EAAC;MAAkE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC;EAEV;;EAEA;EACA,IAAI,CAACjB,eAAe,EAAE;IACpB,oBAAOJ,OAAA,CAACF,QAAQ;MAACwB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,OAAOnB,QAAQ;AACjB;AAACC,EAAA,CAxCQF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
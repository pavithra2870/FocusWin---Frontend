{"ast":null,"code":"var Module = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return function (moduleArg = {}) {\n    var Module = moduleArg;\n    var readyPromiseResolve, readyPromiseReject;\n    Module[\"ready\"] = new Promise((resolve, reject) => {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    var moduleOverrides = Object.assign({}, Module);\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n    var ENVIRONMENT_IS_WEB = true;\n    var ENVIRONMENT_IS_WORKER = false;\n    var scriptDirectory = \"\";\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n    var read_, readAsync, readBinary;\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n      if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n      } else {\n        scriptDirectory = \"\";\n      }\n      {\n        read_ = url => {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = url => {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, true);\n          xhr.responseType = \"arraybuffer\";\n          xhr.onload = () => {\n            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n    } else {}\n    var out = Module[\"print\"] || console.log.bind(console);\n    var err = Module[\"printErr\"] || console.error.bind(console);\n    Object.assign(Module, moduleOverrides);\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n    if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n    var wasmBinary;\n    if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n    if (typeof WebAssembly != \"object\") {\n      abort(\"no native wasm support detected\");\n    }\n    var wasmMemory;\n    var ABORT = false;\n    var EXITSTATUS;\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n    var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n    }\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n    function initRuntime() {\n      runtimeInitialized = true;\n      if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n    function addRunDependency(id) {\n      runDependencies++;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n    }\n    function removeRunDependency(id) {\n      runDependencies--;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n    function abort(what) {\n      if (Module[\"onAbort\"]) {\n        Module[\"onAbort\"](what);\n      }\n      what = \"Aborted(\" + what + \")\";\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what += \". Build with -sASSERTIONS for more info.\";\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n    var isDataURI = filename => filename.startsWith(dataURIPrefix);\n    var wasmBinaryFile;\n    wasmBinaryFile = \"boolean.wasm\";\n    if (!isDataURI(wasmBinaryFile)) {\n      wasmBinaryFile = locateFile(wasmBinaryFile);\n    }\n    function getBinarySync(file) {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n      if (readBinary) {\n        return readBinary(file);\n      }\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n    function getBinaryPromise(binaryFile) {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == \"function\") {\n          return fetch(binaryFile, {\n            credentials: \"same-origin\"\n          }).then(response => {\n            if (!response[\"ok\"]) {\n              throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n            }\n            return response[\"arrayBuffer\"]();\n          }).catch(() => getBinarySync(binaryFile));\n        }\n      }\n      return Promise.resolve().then(() => getBinarySync(binaryFile));\n    }\n    function instantiateArrayBuffer(binaryFile, imports, receiver) {\n      return getBinaryPromise(binaryFile).then(binary => WebAssembly.instantiate(binary, imports)).then(instance => instance).then(receiver, reason => {\n        err(`failed to asynchronously prepare wasm: ${reason}`);\n        abort(reason);\n      });\n    }\n    function instantiateAsync(binary, binaryFile, imports, callback) {\n      if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && typeof fetch == \"function\") {\n        return fetch(binaryFile, {\n          credentials: \"same-origin\"\n        }).then(response => {\n          var result = WebAssembly.instantiateStreaming(response, imports);\n          return result.then(callback, function (reason) {\n            err(`wasm streaming compile failed: ${reason}`);\n            err(\"falling back to ArrayBuffer instantiation\");\n            return instantiateArrayBuffer(binaryFile, imports, callback);\n          });\n        });\n      }\n      return instantiateArrayBuffer(binaryFile, imports, callback);\n    }\n    function createWasm() {\n      var info = {\n        \"a\": wasmImports\n      };\n      function receiveInstance(instance, module) {\n        wasmExports = instance.exports;\n        wasmMemory = wasmExports[\"A\"];\n        updateMemoryViews();\n        wasmTable = wasmExports[\"C\"];\n        addOnInit(wasmExports[\"B\"]);\n        removeRunDependency(\"wasm-instantiate\");\n        return wasmExports;\n      }\n      addRunDependency(\"wasm-instantiate\");\n      function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"]);\n      }\n      if (Module[\"instantiateWasm\"]) {\n        try {\n          return Module[\"instantiateWasm\"](info, receiveInstance);\n        } catch (e) {\n          err(`Module.instantiateWasm callback failed with error: ${e}`);\n          readyPromiseReject(e);\n        }\n      }\n      instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n      return {};\n    }\n    var tempDouble;\n    var tempI64;\n    var callRuntimeCallbacks = callbacks => {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    };\n    var noExitRuntime = Module[\"noExitRuntime\"] || true;\n    function ExceptionInfo(excPtr) {\n      this.excPtr = excPtr;\n      this.ptr = excPtr - 24;\n      this.set_type = function (type) {\n        HEAPU32[this.ptr + 4 >> 2] = type;\n      };\n      this.get_type = function () {\n        return HEAPU32[this.ptr + 4 >> 2];\n      };\n      this.set_destructor = function (destructor) {\n        HEAPU32[this.ptr + 8 >> 2] = destructor;\n      };\n      this.get_destructor = function () {\n        return HEAPU32[this.ptr + 8 >> 2];\n      };\n      this.set_caught = function (caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[this.ptr + 12 >> 0] = caught;\n      };\n      this.get_caught = function () {\n        return HEAP8[this.ptr + 12 >> 0] != 0;\n      };\n      this.set_rethrown = function (rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[this.ptr + 13 >> 0] = rethrown;\n      };\n      this.get_rethrown = function () {\n        return HEAP8[this.ptr + 13 >> 0] != 0;\n      };\n      this.init = function (type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n      };\n      this.set_adjusted_ptr = function (adjustedPtr) {\n        HEAPU32[this.ptr + 16 >> 2] = adjustedPtr;\n      };\n      this.get_adjusted_ptr = function () {\n        return HEAPU32[this.ptr + 16 >> 2];\n      };\n      this.get_exception_ptr = function () {\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n        if (isPointer) {\n          return HEAPU32[this.excPtr >> 2];\n        }\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr;\n      };\n    }\n    var exceptionLast = 0;\n    var uncaughtExceptionCount = 0;\n    var ___cxa_throw = (ptr, type, destructor) => {\n      var info = new ExceptionInfo(ptr);\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      throw exceptionLast;\n    };\n    var tupleRegistrations = {};\n    var runDestructors = destructors => {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    };\n    function simpleReadValueFromPointer(pointer) {\n      return this[\"fromWireType\"](HEAP32[pointer >> 2]);\n    }\n    var awaitingDependencies = {};\n    var registeredTypes = {};\n    var typeDependencies = {};\n    var InternalError;\n    var throwInternalError = message => {\n      throw new InternalError(message);\n    };\n    var whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\n      myTypes.forEach(function (type) {\n        typeDependencies[type] = dependentTypes;\n      });\n      function onComplete(typeConverters) {\n        var myTypeConverters = getTypeConverters(typeConverters);\n        if (myTypeConverters.length !== myTypes.length) {\n          throwInternalError(\"Mismatched type converter count\");\n        }\n        for (var i = 0; i < myTypes.length; ++i) {\n          registerType(myTypes[i], myTypeConverters[i]);\n        }\n      }\n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    };\n    var __embind_finalize_value_array = rawTupleType => {\n      var reg = tupleRegistrations[rawTupleType];\n      delete tupleRegistrations[rawTupleType];\n      var elements = reg.elements;\n      var elementsLength = elements.length;\n      var elementTypes = elements.map(elt => elt.getterReturnType).concat(elements.map(elt => elt.setterArgumentType));\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      whenDependentTypesAreResolved([rawTupleType], elementTypes, function (elementTypes) {\n        elements.forEach((elt, i) => {\n          var getterReturnType = elementTypes[i];\n          var getter = elt.getter;\n          var getterContext = elt.getterContext;\n          var setterArgumentType = elementTypes[i + elementsLength];\n          var setter = elt.setter;\n          var setterContext = elt.setterContext;\n          elt.read = ptr => getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n          elt.write = (ptr, o) => {\n            var destructors = [];\n            setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n            runDestructors(destructors);\n          };\n        });\n        return [{\n          name: reg.name,\n          \"fromWireType\": ptr => {\n            var rv = new Array(elementsLength);\n            for (var i = 0; i < elementsLength; ++i) {\n              rv[i] = elements[i].read(ptr);\n            }\n            rawDestructor(ptr);\n            return rv;\n          },\n          \"toWireType\": (destructors, o) => {\n            if (elementsLength !== o.length) {\n              throw new TypeError(`Incorrect number of tuple elements for ${reg.name}: expected=${elementsLength}, actual=${o.length}`);\n            }\n            var ptr = rawConstructor();\n            for (var i = 0; i < elementsLength; ++i) {\n              elements[i].write(ptr, o[i]);\n            }\n            if (destructors !== null) {\n              destructors.push(rawDestructor, ptr);\n            }\n            return ptr;\n          },\n          \"argPackAdvance\": GenericWireTypeSize,\n          \"readValueFromPointer\": simpleReadValueFromPointer,\n          destructorFunction: rawDestructor\n        }];\n      });\n    };\n    var __embind_register_bigint = (primitiveType, name, size, minRange, maxRange) => {};\n    var embind_init_charCodes = () => {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n        codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    };\n    var embind_charCodes;\n    var readLatin1String = ptr => {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n        ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    };\n    var BindingError;\n    var throwBindingError = message => {\n      throw new BindingError(message);\n    };\n    function sharedRegisterType(rawType, registeredInstance, options = {}) {\n      var name = registeredInstance.name;\n      if (!rawType) {\n        throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(`Cannot register type '${name}' twice`);\n        }\n      }\n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach(cb => cb());\n      }\n    }\n    function registerType(rawType, registeredInstance, options = {}) {\n      if (!(\"argPackAdvance\" in registeredInstance)) {\n        throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n      }\n      return sharedRegisterType(rawType, registeredInstance, options);\n    }\n    var GenericWireTypeSize = 8;\n    var __embind_register_bool = (rawType, name, trueValue, falseValue) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function (wt) {\n          return !!wt;\n        },\n        \"toWireType\": function (destructors, o) {\n          return o ? trueValue : falseValue;\n        },\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": function (pointer) {\n          return this[\"fromWireType\"](HEAPU8[pointer]);\n        },\n        destructorFunction: null\n      });\n    };\n    function handleAllocatorInit() {\n      Object.assign(HandleAllocator.prototype, {\n        get(id) {\n          return this.allocated[id];\n        },\n        has(id) {\n          return this.allocated[id] !== undefined;\n        },\n        allocate(handle) {\n          var id = this.freelist.pop() || this.allocated.length;\n          this.allocated[id] = handle;\n          return id;\n        },\n        free(id) {\n          this.allocated[id] = undefined;\n          this.freelist.push(id);\n        }\n      });\n    }\n    function HandleAllocator() {\n      this.allocated = [undefined];\n      this.freelist = [];\n    }\n    var emval_handles = new HandleAllocator();\n    var __emval_decref = handle => {\n      if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n        emval_handles.free(handle);\n      }\n    };\n    var count_emval_handles = () => {\n      var count = 0;\n      for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n        if (emval_handles.allocated[i] !== undefined) {\n          ++count;\n        }\n      }\n      return count;\n    };\n    var init_emval = () => {\n      emval_handles.allocated.push({\n        value: undefined\n      }, {\n        value: null\n      }, {\n        value: true\n      }, {\n        value: false\n      });\n      emval_handles.reserved = emval_handles.allocated.length;\n      Module[\"count_emval_handles\"] = count_emval_handles;\n    };\n    var Emval = {\n      toValue: handle => {\n        if (!handle) {\n          throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n        }\n        return emval_handles.get(handle).value;\n      },\n      toHandle: value => {\n        switch (value) {\n          case undefined:\n            return 1;\n          case null:\n            return 2;\n          case true:\n            return 3;\n          case false:\n            return 4;\n          default:\n            {\n              return emval_handles.allocate({\n                refcount: 1,\n                value: value\n              });\n            }\n        }\n      }\n    };\n    var __embind_register_emval = (rawType, name) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": handle => {\n          var rv = Emval.toValue(handle);\n          __emval_decref(handle);\n          return rv;\n        },\n        \"toWireType\": (destructors, value) => Emval.toHandle(value),\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: null\n      });\n    };\n    var ensureOverloadTable = (proto, methodName, humanName) => {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        proto[methodName] = function () {\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n            throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`);\n          }\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    };\n    var exposePublicSymbol = (name, value, numArguments) => {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n          throwBindingError(`Cannot register public name '${name}' twice`);\n        }\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n          throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`);\n        }\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    };\n    var enumReadValueFromPointer = (name, width, signed) => {\n      switch (width) {\n        case 1:\n          return signed ? function (pointer) {\n            return this[\"fromWireType\"](HEAP8[pointer >> 0]);\n          } : function (pointer) {\n            return this[\"fromWireType\"](HEAPU8[pointer >> 0]);\n          };\n        case 2:\n          return signed ? function (pointer) {\n            return this[\"fromWireType\"](HEAP16[pointer >> 1]);\n          } : function (pointer) {\n            return this[\"fromWireType\"](HEAPU16[pointer >> 1]);\n          };\n        case 4:\n          return signed ? function (pointer) {\n            return this[\"fromWireType\"](HEAP32[pointer >> 2]);\n          } : function (pointer) {\n            return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n          };\n        default:\n          throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n    var __embind_register_enum = (rawType, name, size, isSigned) => {\n      name = readLatin1String(name);\n      function ctor() {}\n      ctor.values = {};\n      registerType(rawType, {\n        name: name,\n        constructor: ctor,\n        \"fromWireType\": function (c) {\n          return this.constructor.values[c];\n        },\n        \"toWireType\": (destructors, c) => c.value,\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": enumReadValueFromPointer(name, size, isSigned),\n        destructorFunction: null\n      });\n      exposePublicSymbol(name, ctor);\n    };\n    var createNamedFunction = (name, body) => Object.defineProperty(body, \"name\", {\n      value: name\n    });\n    var getTypeName = type => {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    };\n    var requireRegisteredType = (rawType, humanName) => {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n        throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n      }\n      return impl;\n    };\n    var __embind_register_enum_value = (rawEnumType, name, enumValue) => {\n      var enumType = requireRegisteredType(rawEnumType, \"enum\");\n      name = readLatin1String(name);\n      var Enum = enumType.constructor;\n      var Value = Object.create(enumType.constructor.prototype, {\n        value: {\n          value: enumValue\n        },\n        constructor: {\n          value: createNamedFunction(`${enumType.name}_${name}`, function () {})\n        }\n      });\n      Enum.values[enumValue] = Value;\n      Enum[name] = Value;\n    };\n    var floatReadValueFromPointer = (name, width) => {\n      switch (width) {\n        case 4:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n          };\n        case 8:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n          };\n        default:\n          throw new TypeError(`invalid float width (${width}): ${name}`);\n      }\n    };\n    var __embind_register_float = (rawType, name, size) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": value => value,\n        \"toWireType\": (destructors, value) => value,\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": floatReadValueFromPointer(name, size),\n        destructorFunction: null\n      });\n    };\n    function newFunc(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`);\n      }\n      var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function () {});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy();\n      var r = constructor.apply(obj, argumentList);\n      return r instanceof Object ? r : obj;\n    }\n    function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, isAsync) {\n      var argCount = argTypes.length;\n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n      var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n      var needsDestructorStack = false;\n      for (var i = 1; i < argTypes.length; ++i) {\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n          needsDestructorStack = true;\n          break;\n        }\n      }\n      var returns = argTypes[0].name !== \"void\";\n      var argsList = \"\";\n      var argsListWired = \"\";\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n        argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n      }\n      var invokerFnBody = `\\n        return function (${argsList}) {\\n        if (arguments.length !== ${argCount - 2}) {\\n          throwBindingError('function ${humanName} called with ' + arguments.length + ' arguments, expected ${argCount - 2}');\\n        }`;\n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n      }\n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n        args1.push(\"argType\" + i);\n        args2.push(argTypes[i + 2]);\n      }\n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n      invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n          var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n            args1.push(paramName + \"_dtor\");\n            args2.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n      if (returns) {\n        invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n      } else {}\n      invokerFnBody += \"}\\n\";\n      args1.push(invokerFnBody);\n      var invokerFn = newFunc(Function, args1).apply(null, args2);\n      return createNamedFunction(humanName, invokerFn);\n    }\n    var heap32VectorToArray = (count, firstElement) => {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n        array.push(HEAPU32[firstElement + i * 4 >> 2]);\n      }\n      return array;\n    };\n    var replacePublicSymbol = (name, value, numArguments) => {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError(\"Replacing nonexistant public symbol\");\n      }\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    };\n    var dynCallLegacy = (sig, ptr, args) => {\n      var f = Module[\"dynCall_\" + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    };\n    var wasmTableMirror = [];\n    var wasmTable;\n    var getWasmTableEntry = funcPtr => {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    };\n    var dynCall = (sig, ptr, args) => {\n      if (sig.includes(\"j\")) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      var rtn = getWasmTableEntry(ptr).apply(null, args);\n      return rtn;\n    };\n    var getDynCaller = (sig, ptr) => {\n      var argCache = [];\n      return function () {\n        argCache.length = 0;\n        Object.assign(argCache, arguments);\n        return dynCall(sig, ptr, argCache);\n      };\n    };\n    var embind__requireFunction = (signature, rawFunction) => {\n      signature = readLatin1String(signature);\n      function makeDynCaller() {\n        if (signature.includes(\"j\")) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return getWasmTableEntry(rawFunction);\n      }\n      var fp = makeDynCaller();\n      if (typeof fp != \"function\") {\n        throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`);\n      }\n      return fp;\n    };\n    var extendError = (baseErrorType, errorName) => {\n      var errorClass = createNamedFunction(errorName, function (message) {\n        this.name = errorName;\n        this.message = message;\n        var stack = new Error(message).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function () {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return `${this.name}: ${this.message}`;\n        }\n      };\n      return errorClass;\n    };\n    var UnboundTypeError;\n    var throwUnboundTypeError = (message, types) => {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n      throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([\", \"]));\n    };\n    var getFunctionName = signature => {\n      signature = signature.trim();\n      const argsIndex = signature.indexOf(\"(\");\n      if (argsIndex !== -1) {\n        return signature.substr(0, argsIndex);\n      } else {\n        return signature;\n      }\n    };\n    var __embind_register_function = (name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) => {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n      name = getFunctionName(name);\n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n      exposePublicSymbol(name, function () {\n        throwUnboundTypeError(`Cannot call ${name} due to unbound types`, argTypes);\n      }, argCount - 1);\n      whenDependentTypesAreResolved([], argTypes, function (argTypes) {\n        var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn, isAsync), argCount - 1);\n        return [];\n      });\n    };\n    var integerReadValueFromPointer = (name, width, signed) => {\n      switch (width) {\n        case 1:\n          return signed ? pointer => HEAP8[pointer >> 0] : pointer => HEAPU8[pointer >> 0];\n        case 2:\n          return signed ? pointer => HEAP16[pointer >> 1] : pointer => HEAPU16[pointer >> 1];\n        case 4:\n          return signed ? pointer => HEAP32[pointer >> 2] : pointer => HEAPU32[pointer >> 2];\n        default:\n          throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n    var __embind_register_integer = (primitiveType, name, size, minRange, maxRange) => {\n      name = readLatin1String(name);\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n      var fromWireType = value => value;\n      if (minRange === 0) {\n        var bitshift = 32 - 8 * size;\n        fromWireType = value => value << bitshift >>> bitshift;\n      }\n      var isUnsignedType = name.includes(\"unsigned\");\n      var checkAssertions = (value, toTypeName) => {};\n      var toWireType;\n      if (isUnsignedType) {\n        toWireType = function (destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        };\n      } else {\n        toWireType = function (destructors, value) {\n          checkAssertions(value, this.name);\n          return value;\n        };\n      }\n      registerType(primitiveType, {\n        name: name,\n        \"fromWireType\": fromWireType,\n        \"toWireType\": toWireType,\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": integerReadValueFromPointer(name, size, minRange !== 0),\n        destructorFunction: null\n      });\n    };\n    var __embind_register_memory_view = (rawType, dataTypeIndex, name) => {\n      var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n      var TA = typeMapping[dataTypeIndex];\n      function decodeMemoryView(handle) {\n        var size = HEAPU32[handle >> 2];\n        var data = HEAPU32[handle + 4 >> 2];\n        return new TA(HEAP8.buffer, data, size);\n      }\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": decodeMemoryView,\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": decodeMemoryView\n      }, {\n        ignoreDuplicateRegistrations: true\n      });\n    };\n    function readPointer(pointer) {\n      return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n    }\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n        }\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 192 | u >> 6;\n          heap[outIdx++] = 128 | u & 63;\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 224 | u >> 12;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 240 | u >> 18;\n          heap[outIdx++] = 128 | u >> 12 & 63;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        }\n      }\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n    var stringToUTF8 = (str, outPtr, maxBytesToWrite) => stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    var lengthBytesUTF8 = str => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 127) {\n          len++;\n        } else if (c <= 2047) {\n          len += 2;\n        } else if (c >= 55296 && c <= 57343) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n    var UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n    var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = \"\";\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 128)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 224) == 192) {\n          str += String.fromCharCode((u0 & 31) << 6 | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 240) == 224) {\n          u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n        } else {\n          u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n        }\n        if (u0 < 65536) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 65536;\n          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n        }\n      }\n      return str;\n    };\n    var UTF8ToString = (ptr, maxBytesToRead) => ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n    var __embind_register_std_string = (rawType, name) => {\n      name = readLatin1String(name);\n      var stdStringIsUTF8 = name === \"std::string\";\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\"(value) {\n          var length = HEAPU32[value >> 2];\n          var payload = value + 4;\n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n            str = a.join(\"\");\n          }\n          _free(value);\n          return str;\n        },\n        \"toWireType\"(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n          var length;\n          var valueIsOfTypeString = typeof value == \"string\";\n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError(\"Cannot pass non-string to std::string\");\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n          var base = _malloc(4 + length + 1);\n          var ptr = base + 4;\n          HEAPU32[base >> 2] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                }\n                HEAPU8[ptr + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + i] = value[i];\n              }\n            }\n          }\n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n          return base;\n        },\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": readPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        }\n      });\n    };\n    var UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n    var UTF16ToString = (ptr, maxBytesToRead) => {\n      var endPtr = ptr;\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n      if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n      var str = \"\";\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[ptr + i * 2 >> 1];\n        if (codeUnit == 0) break;\n        str += String.fromCharCode(codeUnit);\n      }\n      return str;\n    };\n    var stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2;\n      var startPtr = outPtr;\n      var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        HEAP16[outPtr >> 1] = codeUnit;\n        outPtr += 2;\n      }\n      HEAP16[outPtr >> 1] = 0;\n      return outPtr - startPtr;\n    };\n    var lengthBytesUTF16 = str => str.length * 2;\n    var UTF32ToString = (ptr, maxBytesToRead) => {\n      var i = 0;\n      var str = \"\";\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[ptr + i * 4 >> 2];\n        if (utf32 == 0) break;\n        ++i;\n        if (utf32 >= 65536) {\n          var ch = utf32 - 65536;\n          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    };\n    var stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n        }\n        HEAP32[outPtr >> 2] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      HEAP32[outPtr >> 2] = 0;\n      return outPtr - startPtr;\n    };\n    var lengthBytesUTF32 = str => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n        len += 4;\n      }\n      return len;\n    };\n    var __embind_register_std_wstring = (rawType, charSize, name) => {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = () => HEAPU16;\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = () => HEAPU32;\n        shift = 2;\n      }\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": value => {\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n          var decodeStartPtr = value + 4;\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n          _free(value);\n          return str;\n        },\n        \"toWireType\": (destructors, value) => {\n          if (!(typeof value == \"string\")) {\n            throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\n          }\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[ptr >> 2] = length >> shift;\n          encodeString(value, ptr + 4, length + charSize);\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        }\n      });\n    };\n    var __embind_register_value_array = (rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) => {\n      tupleRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        elements: []\n      };\n    };\n    var __embind_register_value_array_element = (rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) => {\n      tupleRegistrations[rawTupleType].elements.push({\n        getterReturnType: getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext: getterContext,\n        setterArgumentType: setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext: setterContext\n      });\n    };\n    var __embind_register_void = (rawType, name) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true,\n        name: name,\n        \"argPackAdvance\": 0,\n        \"fromWireType\": () => undefined,\n        \"toWireType\": (destructors, o) => undefined\n      });\n    };\n    var _abort = () => {\n      abort(\"\");\n    };\n    var _emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n    var getHeapMax = () => 2147483648;\n    var growMemory = size => {\n      var b = wasmMemory.buffer;\n      var pages = (size - b.byteLength + 65535) / 65536;\n      try {\n        wasmMemory.grow(pages);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    };\n    var _emscripten_resize_heap = requestedSize => {\n      var oldSize = HEAPU8.length;\n      requestedSize >>>= 0;\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n        var replacement = growMemory(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var ENV = {};\n    var getExecutableName = () => thisProgram || \"./this.program\";\n    var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        var lang = (typeof navigator == \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n        var env = {\n          \"USER\": \"web_user\",\n          \"LOGNAME\": \"web_user\",\n          \"PATH\": \"/\",\n          \"PWD\": \"/\",\n          \"HOME\": \"/home/web_user\",\n          \"LANG\": lang,\n          \"_\": getExecutableName()\n        };\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n    var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n      HEAP8[buffer >> 0] = 0;\n    };\n    var PATH = {\n      isAbs: path => path.charAt(0) === \"/\",\n      splitPath: filename => {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === \".\") {\n            parts.splice(i, 1);\n          } else if (last === \"..\") {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift(\"..\");\n          }\n        }\n        return parts;\n      },\n      normalize: path => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === \"/\";\n        path = PATH.normalizeArray(path.split(\"/\").filter(p => !!p), !isAbsolute).join(\"/\");\n        if (!path && !isAbsolute) {\n          path = \".\";\n        }\n        if (path && trailingSlash) {\n          path += \"/\";\n        }\n        return (isAbsolute ? \"/\" : \"\") + path;\n      },\n      dirname: path => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return \".\";\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: path => {\n        if (path === \"/\") return \"/\";\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf(\"/\");\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join(\"/\"));\n      },\n      join2: (l, r) => PATH.normalize(l + \"/\" + r)\n    };\n    var initRandomFill = () => {\n      if (typeof crypto == \"object\" && typeof crypto[\"getRandomValues\"] == \"function\") {\n        return view => crypto.getRandomValues(view);\n      } else abort(\"initRandomDevice\");\n    };\n    var randomFill = view => (randomFill = initRandomFill())(view);\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = \"\",\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n          if (typeof path != \"string\") {\n            throw new TypeError(\"Arguments to path.resolve must be strings\");\n          } else if (!path) {\n            return \"\";\n          }\n          resolvedPath = path + \"/\" + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(p => !!p), !resolvedAbsolute).join(\"/\");\n        return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== \"\") break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== \"\") break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split(\"/\"));\n        var toParts = trim(to.split(\"/\"));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push(\"..\");\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join(\"/\");\n      }\n    };\n    var FS_stdin_getChar_buffer = [];\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n          result = window.prompt(\"Input: \");\n          if (result !== null) {\n            result += \"\\n\";\n          }\n        } else if (typeof readline == \"function\") {\n          result = readline();\n          if (result !== null) {\n            result += \"\\n\";\n          }\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n    var TTY = {\n      ttys: [],\n      init() {},\n      shutdown() {},\n      register(dev, ops) {\n        TTY.ttys[dev] = {\n          input: [],\n          output: [],\n          ops: ops\n        };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        }\n      },\n      default_tty_ops: {\n        get_char(tty) {\n          return FS_stdin_getChar();\n        },\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n        ioctl_tcgets(tty) {\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n          };\n        },\n        ioctl_tcsets(tty, optional_actions, data) {\n          return 0;\n        },\n        ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        }\n      },\n      default_tty1_ops: {\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }\n      }\n    };\n    var mmapAlloc = size => {\n      abort();\n    };\n    var MEMFS = {\n      ops_table: null,\n      mount(mount) {\n        return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n      },\n      createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir(node) {\n          var entries = [\".\", \"..\"];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        }\n      },\n      stream_ops: {\n        read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n        mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return {\n            ptr: ptr,\n            allocated: allocated\n          };\n        },\n        msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          return 0;\n        }\n      }\n    };\n    var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : \"\";\n      readAsync(url, arrayBuffer => {\n        assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, event => {\n        if (onerror) {\n          onerror();\n        } else {\n          throw `Loading data file \"${url}\" failed.`;\n        }\n      });\n      if (dep) addRunDependency(dep);\n    };\n    var FS_createDataFile = (parent, name, fileData, canRead, canWrite, canOwn) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n    var preloadPlugins = Module[\"preloadPlugins\"] || [];\n    var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      if (typeof Browser != \"undefined\") Browser.init();\n      var handled = false;\n      preloadPlugins.forEach(plugin => {\n        if (handled) return;\n        if (plugin[\"canHandle\"](fullname)) {\n          plugin[\"handle\"](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n    var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`);\n      function processData(byteArray) {\n        function finish(byteArray) {\n          if (preFinish) preFinish();\n          if (!dontCreateFile) {\n            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n          }\n          if (onload) onload();\n          removeRunDependency(dep);\n        }\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n          if (onerror) onerror();\n          removeRunDependency(dep);\n        })) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == \"string\") {\n        asyncLoad(url, byteArray => processData(byteArray), onerror);\n      } else {\n        processData(url);\n      }\n    };\n    var FS_modeStringToFlags = str => {\n      var flagModes = {\n        \"r\": 0,\n        \"r+\": 2,\n        \"w\": 512 | 64 | 1,\n        \"w+\": 512 | 64 | 2,\n        \"a\": 1024 | 64 | 1,\n        \"a+\": 1024 | 64 | 2\n      };\n      var flags = flagModes[str];\n      if (typeof flags == \"undefined\") {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n    var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: \"/\",\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n        if (!path) return {\n          path: \"\",\n          node: null\n        };\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        opts = Object.assign(defaults, opts);\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n        var parts = path.split(\"/\").filter(p => !!p);\n        var current = FS.root;\n        var current_path = \"/\";\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n          if (FS.isMountpoint(current)) {\n            if (!islast || islast && opts.follow_mount) {\n              current = current.mounted.root;\n            }\n          }\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1\n              });\n              current = lookup.node;\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n        return {\n          path: current_path,\n          node: current\n        };\n      },\n      getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== \"/\" ? `${mount}/${path}` : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n      hashName(parentid, name) {\n        var hash = 0;\n        for (var i = 0; i < name.length; i++) {\n          hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n        }\n        return (parentid + hash >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        return FS.lookup(parent, name);\n      },\n      createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n        FS.hashAddNode(node);\n        return node;\n      },\n      destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagsToPermissionString(flag) {\n        var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n        if (flag & 512) {\n          perms += \"w\";\n        }\n        return perms;\n      },\n      nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        if (perms.includes(\"r\") && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup(dir) {\n        var errCode = FS.nodePermissions(dir, \"x\");\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, \"wx\");\n      },\n      mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, \"wx\");\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n      getStream: fd => FS.streams[fd],\n      createStream(stream, fd = -1) {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {\n            this.shared = {};\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get() {\n                return this.node;\n              },\n              set(val) {\n                this.node = val;\n              }\n            },\n            isRead: {\n              get() {\n                return (this.flags & 2097155) !== 1;\n              }\n            },\n            isWrite: {\n              get() {\n                return (this.flags & 2097155) !== 0;\n              }\n            },\n            isAppend: {\n              get() {\n                return this.flags & 1024;\n              }\n            },\n            flags: {\n              get() {\n                return this.shared.flags;\n              },\n              set(val) {\n                this.shared.flags = val;\n              }\n            },\n            position: {\n              get() {\n                return this.shared.position;\n              },\n              set(val) {\n                this.shared.position = val;\n              }\n            }\n          });\n        }\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek() {\n          throw new FS.ErrnoError(70);\n        }\n      },\n      major: dev => dev >> 8,\n      minor: dev => dev & 255,\n      makedev: (ma, mi) => ma << 8 | mi,\n      registerDevice(dev, ops) {\n        FS.devices[dev] = {\n          stream_ops: ops\n        };\n      },\n      getDevice: dev => FS.devices[dev],\n      getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n        while (check.length) {\n          var m = check.pop();\n          mounts.push(m);\n          check.push.apply(check, m.mounts);\n        }\n        return mounts;\n      },\n      syncfs(populate, callback) {\n        if (typeof populate == \"function\") {\n          callback = populate;\n          populate = false;\n        }\n        FS.syncFSRequests++;\n        if (FS.syncFSRequests > 1) {\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\n        }\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n        mounts.forEach(mount => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount(type, opts, mountpoint) {\n        var root = mountpoint === \"/\";\n        var pseudo = !mountpoint;\n        var node;\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, {\n            follow_mount: false\n          });\n          mountpoint = lookup.path;\n          node = lookup.node;\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: []\n        };\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n        return mountRoot;\n      },\n      unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, {\n          follow_mount: false\n        });\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n        Object.keys(FS.nameTable).forEach(hash => {\n          var current = FS.nameTable[hash];\n          while (current) {\n            var next = current.name_next;\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n            current = next;\n          }\n        });\n        node.mounted = null;\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === \".\" || name === \"..\") {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create(path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree(path, mode) {\n        var dirs = path.split(\"/\");\n        var d = \"\";\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += \"/\" + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev(path, mode, dev) {\n        if (typeof dev == \"undefined\") {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, {\n          parent: true\n        });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        var lookup, old_dir, new_dir;\n        lookup = FS.lookupPath(old_path, {\n          parent: true\n        });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, {\n          parent: true\n        });\n        new_dir = lookup.node;\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        var old_node = FS.lookupNode(old_dir, old_name);\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(28);\n        }\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(55);\n        }\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n        if (old_node === new_node) {\n          return;\n        }\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n          throw new FS.ErrnoError(10);\n        }\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        FS.hashRemoveNode(old_node);\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n      stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, {\n          follow: !dontFollow\n        });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat(path) {\n        return FS.stat(path, true);\n      },\n      chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: mode & 4095 | node.mode & ~4095,\n          timestamp: Date.now()\n        });\n      },\n      lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n      chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n        });\n      },\n      lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: true\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, \"w\");\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n      ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n      open(path, flags, mode) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == \"string\" ? FS_modeStringToFlags(flags) : flags;\n        mode = typeof mode == \"undefined\" ? 438 : mode;\n        if (flags & 64) {\n          mode = mode & 4095 | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == \"object\") {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n        flags &= ~(128 | 512 | 131072);\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          ungotten: [],\n          error: false\n        });\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module[\"logReadFiles\"] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != \"undefined\";\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != \"undefined\";\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap(stream, length, position, prot, flags) {\n        if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n      munmap: stream => 0,\n      ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || \"binary\";\n        if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === \"utf8\") {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === \"binary\") {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == \"string\") {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error(\"Unsupported data type\");\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, \"x\");\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories() {\n        FS.mkdir(\"/tmp\");\n        FS.mkdir(\"/home\");\n        FS.mkdir(\"/home/web_user\");\n      },\n      createDefaultDevices() {\n        FS.mkdir(\"/dev\");\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length\n        });\n        FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n        FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n        var randomBuffer = new Uint8Array(1024),\n          randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice(\"/dev\", \"random\", randomByte);\n        FS.createDevice(\"/dev\", \"urandom\", randomByte);\n        FS.mkdir(\"/dev/shm\");\n        FS.mkdir(\"/dev/shm/tmp\");\n      },\n      createSpecialDirectories() {\n        FS.mkdir(\"/proc\");\n        var proc_self = FS.mkdir(\"/proc/self\");\n        FS.mkdir(\"/proc/self/fd\");\n        FS.mount({\n          mount() {\n            var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n            node.node_ops = {\n              lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStreamChecked(fd);\n                var ret = {\n                  parent: null,\n                  mount: {\n                    mountpoint: \"fake\"\n                  },\n                  node_ops: {\n                    readlink: () => stream.path\n                  }\n                };\n                ret.parent = ret;\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, \"/proc/self/fd\");\n      },\n      createStandardStreams() {\n        if (Module[\"stdin\"]) {\n          FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n        }\n        if (Module[\"stdout\"]) {\n          FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n        }\n        if (Module[\"stderr\"]) {\n          FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n        } else {\n          FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n        }\n        var stdin = FS.open(\"/dev/stdin\", 0);\n        var stdout = FS.open(\"/dev/stdout\", 1);\n        var stderr = FS.open(\"/dev/stderr\", 1);\n      },\n      ensureErrnoError() {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.name = \"ErrnoError\";\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = \"FS error\";\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        [44].forEach(code => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = \"<generic error, no stack>\";\n        });\n      },\n      staticInit() {\n        FS.ensureErrnoError();\n        FS.nameTable = new Array(4096);\n        FS.mount(MEMFS, {}, \"/\");\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n        FS.filesystems = {\n          \"MEMFS\": MEMFS\n        };\n      },\n      init(input, output, error) {\n        FS.init.initialized = true;\n        FS.ensureErrnoError();\n        Module[\"stdin\"] = input || Module[\"stdin\"];\n        Module[\"stdout\"] = output || Module[\"stdout\"];\n        Module[\"stderr\"] = error || Module[\"stderr\"];\n        FS.createStandardStreams();\n      },\n      quit() {\n        FS.init.initialized = false;\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, {\n            parent: true\n          });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === \"/\";\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n        var parts = path.split(\"/\").reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == \"string\") {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n      createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        if (typeof XMLHttpRequest != \"undefined\") {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n        }\n      },\n      createLazyFile(parent, name, url, canRead, canWrite) {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = idx / this.chunkSize | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"HEAD\", url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n          var chunkSize = 1024 * 1024;\n          if (!hasByteServing) chunkSize = datalength;\n          var doXHR = (from, to) => {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n            xhr.responseType = \"arraybuffer\";\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n            }\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            if (xhr.response !== undefined) {\n              return new Uint8Array(xhr.response || []);\n            }\n            return intArrayFromString(xhr.responseText || \"\", true);\n          };\n          var lazyArray = this;\n          lazyArray.setDataGetter(chunkNum => {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum + 1) * chunkSize - 1;\n            end = Math.min(end, datalength - 1);\n            if (typeof lazyArray.chunks[chunkNum] == \"undefined\") {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n            if (typeof lazyArray.chunks[chunkNum] == \"undefined\") throw new Error(\"doXHR failed!\");\n            return lazyArray.chunks[chunkNum];\n          });\n          if (usesGzip || !datalength) {\n            chunkSize = datalength = 1;\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n        if (typeof XMLHttpRequest != \"undefined\") {\n          if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              }\n            }\n          });\n          var properties = {\n            isDevice: false,\n            contents: lazyArray\n          };\n        } else {\n          var properties = {\n            isDevice: false,\n            url: url\n          };\n        }\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            }\n          }\n        });\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(key => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return {\n            ptr: ptr,\n            allocated: true\n          };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      }\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[buf + 4 >> 2] = stat.mode;\n        HEAPU32[buf + 8 >> 2] = stat.nlink;\n        HEAP32[buf + 12 >> 2] = stat.uid;\n        HEAP32[buf + 16 >> 2] = stat.gid;\n        HEAP32[buf + 20 >> 2] = stat.rdev;\n        tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 24 >> 2] = tempI64[0], HEAP32[buf + 28 >> 2] = tempI64[1];\n        HEAP32[buf + 32 >> 2] = 4096;\n        HEAP32[buf + 36 >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        tempI64 = [Math.floor(atime / 1e3) >>> 0, (tempDouble = Math.floor(atime / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\n        HEAPU32[buf + 48 >> 2] = atime % 1e3 * 1e3;\n        tempI64 = [Math.floor(mtime / 1e3) >>> 0, (tempDouble = Math.floor(mtime / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 56 >> 2] = tempI64[0], HEAP32[buf + 60 >> 2] = tempI64[1];\n        HEAPU32[buf + 64 >> 2] = mtime % 1e3 * 1e3;\n        tempI64 = [Math.floor(ctime / 1e3) >>> 0, (tempDouble = Math.floor(ctime / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 72 >> 2] = tempI64[0], HEAP32[buf + 76 >> 2] = tempI64[1];\n        HEAPU32[buf + 80 >> 2] = ctime % 1e3 * 1e3;\n        tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 88 >> 2] = tempI64[0], HEAP32[buf + 92 >> 2] = tempI64[1];\n        return 0;\n      },\n      doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      varargs: undefined,\n      get() {\n        var ret = HEAP32[+SYSCALLS.varargs >> 2];\n        SYSCALLS.varargs += 4;\n        return ret;\n      },\n      getp() {\n        return SYSCALLS.get();\n      },\n      getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      }\n    };\n    var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[__environ + i * 4 >> 2] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n    var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(string => bufSize += string.length + 1);\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    };\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[iov + 4 >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset !== \"undefined\") {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    var convertI32PairToI53Checked = (lo, hi) => hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      var offset = convertI32PairToI53Checked(offset_low, offset_high);\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\n        if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[iov + 4 >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== \"undefined\") {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    var isLeapYear = year => year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    var arraySum = (array, index) => {\n      var sum = 0;\n      for (var i = 0; i <= index; sum += array[i++]) {}\n      return sum;\n    };\n    var MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var addDays = (date, days) => {\n      var newDate = new Date(date.getTime());\n      while (days > 0) {\n        var leap = isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n        if (days > daysInCurrentMonth - newDate.getDate()) {\n          days -= daysInCurrentMonth - newDate.getDate() + 1;\n          newDate.setDate(1);\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth + 1);\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear() + 1);\n          }\n        } else {\n          newDate.setDate(newDate.getDate() + days);\n          return newDate;\n        }\n      }\n      return newDate;\n    };\n    var writeArrayToMemory = (array, buffer) => {\n      HEAP8.set(array, buffer);\n    };\n    var _strftime = (s, maxsize, format, tm) => {\n      var tm_zone = HEAPU32[tm + 40 >> 2];\n      var date = {\n        tm_sec: HEAP32[tm >> 2],\n        tm_min: HEAP32[tm + 4 >> 2],\n        tm_hour: HEAP32[tm + 8 >> 2],\n        tm_mday: HEAP32[tm + 12 >> 2],\n        tm_mon: HEAP32[tm + 16 >> 2],\n        tm_year: HEAP32[tm + 20 >> 2],\n        tm_wday: HEAP32[tm + 24 >> 2],\n        tm_yday: HEAP32[tm + 28 >> 2],\n        tm_isdst: HEAP32[tm + 32 >> 2],\n        tm_gmtoff: HEAP32[tm + 36 >> 2],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n      };\n      var pattern = UTF8ToString(format);\n      var EXPANSION_RULES_1 = {\n        \"%c\": \"%a %b %d %H:%M:%S %Y\",\n        \"%D\": \"%m/%d/%y\",\n        \"%F\": \"%Y-%m-%d\",\n        \"%h\": \"%b\",\n        \"%r\": \"%I:%M:%S %p\",\n        \"%R\": \"%H:%M\",\n        \"%T\": \"%H:%M:%S\",\n        \"%x\": \"%m/%d/%y\",\n        \"%X\": \"%H:%M:%S\",\n        \"%Ec\": \"%c\",\n        \"%EC\": \"%C\",\n        \"%Ex\": \"%m/%d/%y\",\n        \"%EX\": \"%H:%M:%S\",\n        \"%Ey\": \"%y\",\n        \"%EY\": \"%Y\",\n        \"%Od\": \"%d\",\n        \"%Oe\": \"%e\",\n        \"%OH\": \"%H\",\n        \"%OI\": \"%I\",\n        \"%Om\": \"%m\",\n        \"%OM\": \"%M\",\n        \"%OS\": \"%S\",\n        \"%Ou\": \"%u\",\n        \"%OU\": \"%U\",\n        \"%OV\": \"%V\",\n        \"%Ow\": \"%w\",\n        \"%OW\": \"%W\",\n        \"%Oy\": \"%y\"\n      };\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n      }\n      var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      function leadingSomething(value, digits, character) {\n        var str = typeof value == \"number\" ? value.toString() : value || \"\";\n        while (str.length < digits) {\n          str = character[0] + str;\n        }\n        return str;\n      }\n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, \"0\");\n      }\n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : value > 0 ? 1 : 0;\n        }\n        var compare;\n        if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate() - date2.getDate());\n          }\n        }\n        return compare;\n      }\n      function getFirstWeekStartDate(janFourth) {\n        switch (janFourth.getDay()) {\n          case 0:\n            return new Date(janFourth.getFullYear() - 1, 11, 29);\n          case 1:\n            return janFourth;\n          case 2:\n            return new Date(janFourth.getFullYear(), 0, 3);\n          case 3:\n            return new Date(janFourth.getFullYear(), 0, 2);\n          case 4:\n            return new Date(janFourth.getFullYear(), 0, 1);\n          case 5:\n            return new Date(janFourth.getFullYear() - 1, 11, 31);\n          case 6:\n            return new Date(janFourth.getFullYear() - 1, 11, 30);\n        }\n      }\n      function getWeekBasedYear(date) {\n        var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n        var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n        var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n        var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n        var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n        if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n          if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n            return thisDate.getFullYear() + 1;\n          }\n          return thisDate.getFullYear();\n        }\n        return thisDate.getFullYear() - 1;\n      }\n      var EXPANSION_RULES_2 = {\n        \"%a\": date => WEEKDAYS[date.tm_wday].substring(0, 3),\n        \"%A\": date => WEEKDAYS[date.tm_wday],\n        \"%b\": date => MONTHS[date.tm_mon].substring(0, 3),\n        \"%B\": date => MONTHS[date.tm_mon],\n        \"%C\": date => {\n          var year = date.tm_year + 1900;\n          return leadingNulls(year / 100 | 0, 2);\n        },\n        \"%d\": date => leadingNulls(date.tm_mday, 2),\n        \"%e\": date => leadingSomething(date.tm_mday, 2, \" \"),\n        \"%g\": date => getWeekBasedYear(date).toString().substring(2),\n        \"%G\": date => getWeekBasedYear(date),\n        \"%H\": date => leadingNulls(date.tm_hour, 2),\n        \"%I\": date => {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        \"%j\": date => leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1), 3),\n        \"%m\": date => leadingNulls(date.tm_mon + 1, 2),\n        \"%M\": date => leadingNulls(date.tm_min, 2),\n        \"%n\": () => \"\\n\",\n        \"%p\": date => {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return \"AM\";\n          }\n          return \"PM\";\n        },\n        \"%S\": date => leadingNulls(date.tm_sec, 2),\n        \"%t\": () => \"\\t\",\n        \"%u\": date => date.tm_wday || 7,\n        \"%U\": date => {\n          var days = date.tm_yday + 7 - date.tm_wday;\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        \"%V\": date => {\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n            val++;\n          }\n          if (!val) {\n            val = 52;\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n            if (dec31 == 4 || dec31 == 5 && isLeapYear(date.tm_year % 400 - 1)) {\n              val++;\n            }\n          } else if (val == 53) {\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n          }\n          return leadingNulls(val, 2);\n        },\n        \"%w\": date => date.tm_wday,\n        \"%W\": date => {\n          var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        \"%y\": date => (date.tm_year + 1900).toString().substring(2),\n        \"%Y\": date => date.tm_year + 1900,\n        \"%z\": date => {\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          off = off / 60 * 100 + off % 60;\n          return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n        },\n        \"%Z\": date => date.tm_zone,\n        \"%%\": () => \"%\"\n      };\n      pattern = pattern.replace(/%%/g, \"\\0\\0\");\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n        }\n      }\n      pattern = pattern.replace(/\\0\\0/g, \"%\");\n      var bytes = intArrayFromString(pattern, false);\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n      writeArrayToMemory(bytes, s);\n      return bytes.length - 1;\n    };\n    var _strftime_l = (s, maxsize, format, tm, loc) => _strftime(s, maxsize, format, tm);\n    var getCFunc = ident => {\n      var func = Module[\"_\" + ident];\n      return func;\n    };\n    var stringToUTF8OnStack = str => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    };\n    var ccall = (ident, returnType, argTypes, args, opts) => {\n      var toC = {\n        \"string\": str => {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) {\n            ret = stringToUTF8OnStack(str);\n          }\n          return ret;\n        },\n        \"array\": arr => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n      function convertReturnValue(ret) {\n        if (returnType === \"string\") {\n          return UTF8ToString(ret);\n        }\n        if (returnType === \"boolean\") return Boolean(ret);\n        return ret;\n      }\n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n      ret = onDone(ret);\n      return ret;\n    };\n    InternalError = Module[\"InternalError\"] = class InternalError extends Error {\n      constructor(message) {\n        super(message);\n        this.name = \"InternalError\";\n      }\n    };\n    embind_init_charCodes();\n    BindingError = Module[\"BindingError\"] = class BindingError extends Error {\n      constructor(message) {\n        super(message);\n        this.name = \"BindingError\";\n      }\n    };\n    handleAllocatorInit();\n    init_emval();\n    UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        }\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        }\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        }\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        }\n      }\n    });\n    FS.FSNode = FSNode;\n    FS.createPreloadedFile = FS_createPreloadedFile;\n    FS.staticInit();\n    var wasmImports = {\n      a: ___cxa_throw,\n      m: __embind_finalize_value_array,\n      p: __embind_register_bigint,\n      k: __embind_register_bool,\n      y: __embind_register_emval,\n      z: __embind_register_enum,\n      f: __embind_register_enum_value,\n      j: __embind_register_float,\n      d: __embind_register_function,\n      e: __embind_register_integer,\n      b: __embind_register_memory_view,\n      h: __embind_register_std_string,\n      g: __embind_register_std_wstring,\n      n: __embind_register_value_array,\n      c: __embind_register_value_array_element,\n      l: __embind_register_void,\n      i: _abort,\n      x: _emscripten_memcpy_js,\n      u: _emscripten_resize_heap,\n      r: _environ_get,\n      s: _environ_sizes_get,\n      w: _fd_close,\n      t: _fd_read,\n      o: _fd_seek,\n      v: _fd_write,\n      q: _strftime_l\n    };\n    var wasmExports = createWasm();\n    var ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports[\"B\"])();\n    var ___getTypeName = a0 => (___getTypeName = wasmExports[\"D\"])(a0);\n    var ___errno_location = () => (___errno_location = wasmExports[\"__errno_location\"])();\n    var _malloc = Module[\"_malloc\"] = a0 => (_malloc = Module[\"_malloc\"] = wasmExports[\"E\"])(a0);\n    var _free = Module[\"_free\"] = a0 => (_free = Module[\"_free\"] = wasmExports[\"F\"])(a0);\n    var stackSave = () => (stackSave = wasmExports[\"G\"])();\n    var stackRestore = a0 => (stackRestore = wasmExports[\"H\"])(a0);\n    var stackAlloc = a0 => (stackAlloc = wasmExports[\"I\"])(a0);\n    var ___cxa_increment_exception_refcount = a0 => (___cxa_increment_exception_refcount = wasmExports[\"__cxa_increment_exception_refcount\"])(a0);\n    var ___cxa_is_pointer_type = a0 => (___cxa_is_pointer_type = wasmExports[\"J\"])(a0);\n    var dynCall_jiji = Module[\"dynCall_jiji\"] = (a0, a1, a2, a3, a4) => (dynCall_jiji = Module[\"dynCall_jiji\"] = wasmExports[\"K\"])(a0, a1, a2, a3, a4);\n    var dynCall_viijii = Module[\"dynCall_viijii\"] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viijii = Module[\"dynCall_viijii\"] = wasmExports[\"L\"])(a0, a1, a2, a3, a4, a5, a6);\n    var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = wasmExports[\"M\"])(a0, a1, a2, a3, a4, a5, a6);\n    var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = wasmExports[\"N\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n    var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = wasmExports[\"O\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n    Module[\"ccall\"] = ccall;\n    var calledRun;\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n    function run() {\n      if (runDependencies > 0) {\n        return;\n      }\n      preRun();\n      if (runDependencies > 0) {\n        return;\n      }\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n    run();\n    return moduleArg.ready;\n  };\n})();\n;\nexport default Module;","map":{"version":3,"names":["Module","_scriptDir","document","currentScript","src","undefined","moduleArg","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","moduleOverrides","Object","assign","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","scriptDirectory","locateFile","path","read_","readAsync","readBinary","self","location","href","indexOf","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","Uint8Array","response","onload","onerror","out","console","log","bind","err","error","wasmBinary","WebAssembly","abort","wasmMemory","ABORT","EXITSTATUS","assert","condition","text","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","b","buffer","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeInitialized","preRun","length","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","FS","init","initialized","ignorePermissions","TTY","postRun","addOnPostRun","cb","unshift","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","clearInterval","callback","what","e","RuntimeError","dataURIPrefix","isDataURI","filename","startsWith","wasmBinaryFile","getBinarySync","file","getBinaryPromise","binaryFile","fetch","credentials","then","catch","instantiateArrayBuffer","imports","receiver","binary","instantiate","instance","reason","instantiateAsync","instantiateStreaming","result","createWasm","info","wasmImports","receiveInstance","module","wasmExports","exports","wasmTable","receiveInstantiationResult","tempDouble","tempI64","callbacks","noExitRuntime","ExceptionInfo","excPtr","ptr","set_type","type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","isPointer","___cxa_is_pointer_type","adjusted","exceptionLast","uncaughtExceptionCount","___cxa_throw","tupleRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","InternalError","throwInternalError","message","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","forEach","onComplete","typeConverters","myTypeConverters","i","registerType","Array","unregisteredTypes","registered","dt","hasOwnProperty","push","__embind_finalize_value_array","rawTupleType","reg","elements","elementsLength","elementTypes","map","elt","getterReturnType","concat","setterArgumentType","rawConstructor","rawDestructor","getter","getterContext","setter","setterContext","read","write","o","name","rv","toWireType","TypeError","GenericWireTypeSize","destructorFunction","__embind_register_bigint","primitiveType","size","minRange","maxRange","embind_init_charCodes","codes","String","fromCharCode","embind_charCodes","readLatin1String","ret","c","BindingError","throwBindingError","sharedRegisterType","rawType","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","fromWireType","wt","readValueFromPointer","handleAllocatorInit","HandleAllocator","prototype","get","allocated","has","allocate","handle","freelist","free","emval_handles","__emval_decref","reserved","refcount","count_emval_handles","count","init_emval","value","Emval","toValue","toHandle","__embind_register_emval","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","arguments","apply","argCount","exposePublicSymbol","numArguments","enumReadValueFromPointer","width","signed","__embind_register_enum","isSigned","ctor","values","constructor","createNamedFunction","body","defineProperty","getTypeName","___getTypeName","_free","requireRegisteredType","impl","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","create","floatReadValueFromPointer","__embind_register_float","newFunc","argumentList","Function","dummy","obj","r","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isAsync","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","invokerFn","heap32VectorToArray","firstElement","array","replacePublicSymbol","dynCallLegacy","sig","args","f","call","wasmTableMirror","getWasmTableEntry","funcPtr","func","dynCall","includes","rtn","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","extendError","baseErrorType","errorName","errorClass","stack","Error","toString","UnboundTypeError","throwUnboundTypeError","types","unboundTypes","seen","visit","join","getFunctionName","trim","argsIndex","__embind_register_function","rawArgTypesAddr","rawInvoker","fn","invokerArgsArray","slice","integerReadValueFromPointer","__embind_register_integer","bitshift","isUnsignedType","checkAssertions","toTypeName","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","data","readPointer","stringToUTF8Array","str","heap","outIdx","maxBytesToWrite","startIdx","endIdx","u","charCodeAt","u1","stringToUTF8","outPtr","lengthBytesUTF8","len","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","decode","subarray","u0","u2","ch","UTF8ToString","__embind_register_std_string","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","base","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","maxReadBytes","__embind_register_value_array","constructorSignature","destructorSignature","__embind_register_value_array_element","getterSignature","setterSignature","__embind_register_void","isVoid","_abort","_emscripten_memcpy_js","dest","num","copyWithin","getHeapMax","growMemory","pages","byteLength","grow","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","Math","min","newSize","max","replacement","ENV","getExecutableName","getEnvStrings","strings","lang","navigator","languages","env","stringToAscii","PATH","isAbs","charAt","splitPath","splitPathRe","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","split","filter","p","dirname","root","dir","basename","lastSlash","paths","join2","l","initRandomFill","crypto","view","getRandomValues","randomFill","PATH_FS","resolvedPath","resolvedAbsolute","cwd","relative","from","to","arr","start","end","fromParts","toParts","samePartsLength","outputParts","FS_stdin_getChar_buffer","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","FS_stdin_getChar","window","prompt","readline","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","fsync","offset","pos","get_char","bytesRead","timestamp","Date","now","put_char","default_tty_ops","val","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","optional_actions","ioctl_tiocgwinsz","default_tty1_ops","mmapAlloc","MEMFS","ops_table","mount","createNode","parent","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","oldContents","set","resizeFileStorage","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","newname","oldpath","position","canOwn","whence","prot","flags","byteOffset","mmapFlags","asyncLoad","noRunDep","dep","arrayBuffer","event","FS_createDataFile","fileData","canRead","canWrite","createDataFile","preloadPlugins","FS_handledByPreloadPlugin","byteArray","fullname","finish","Browser","handled","plugin","FS_createPreloadedFile","dontCreateFile","preFinish","processData","FS_modeStringToFlags","flagModes","FS_getMode","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd","getStreamChecked","getStream","createStream","FSStream","shared","defineProperties","object","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","syncfs","populate","completed","doCallback","done","errored","pseudo","mountRoot","unmount","keys","next","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dirname","new_dirname","old_name","old_dir","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","arg","readFile","encoding","buf","writeFile","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","stdin","stdout","stderr","ensureErrnoError","setErrno","code","staticInit","quit","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","LazyUint8Array_get","chunkOffset","chunkSize","chunkNum","setDataGetter","LazyUint8Array_setDataGetter","cacheLength","LazyUint8Array_cacheLength","datalength","Number","getResponseHeader","header","hasByteServing","usesGzip","doXHR","setRequestHeader","overrideMimeType","lazyArray","_length","_chunkSize","forceLoadLazyFile","writeChunks","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","getStreamFromFD","doStat","abs","floor","getTime","doMsync","addr","varargs","getp","getStr","_environ_get","__environ","environ_buf","bufSize","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","doReadv","iov","iovcnt","curr","_fd_read","pnum","convertI32PairToI53Checked","lo","hi","NaN","_fd_seek","offset_low","offset_high","newOffset","isNaN","doWritev","_fd_write","isLeapYear","year","arraySum","index","sum","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","writeArrayToMemory","_strftime","s","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","%n","%t","dec31","jan1","off","ahead","%%","bytes","_strftime_l","loc","getCFunc","ident","stringToUTF8OnStack","stackAlloc","ccall","returnType","toC","convertReturnValue","Boolean","cArgs","converter","stackSave","onDone","stackRestore","readMode","writeMode","createPreloadedFile","k","y","z","j","h","g","n","w","t","v","q","___wasm_call_ctors","a0","___errno_location","___cxa_increment_exception_refcount","dynCall_jiji","a1","a2","a3","a4","dynCall_viijii","a5","a6","dynCall_iiiiij","dynCall_iiiiijj","a7","a8","dynCall_iiiiiijj","a9","calledRun","runCaller","run","doRun","setTimeout","ready"],"sources":["C:/Users/Ranga/Documents/ToDo/client/node_modules/@splinetool/runtime/build/boolean.js"],"sourcesContent":["\nvar Module = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;wasmBinaryFile=\"boolean.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(()=>getBinarySync(binaryFile))}}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"A\"];updateMemoryViews();wasmTable=wasmExports[\"C\"];addOnInit(wasmExports[\"B\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor)};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;var ___cxa_throw=(ptr,type,destructor)=>{var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw exceptionLast};var tupleRegistrations={};var runDestructors=destructors=>{while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}};function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var InternalError;var throwInternalError=message=>{throw new InternalError(message)};var whenDependentTypesAreResolved=(myTypes,dependentTypes,getTypeConverters)=>{myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}};var __embind_finalize_value_array=rawTupleType=>{var reg=tupleRegistrations[rawTupleType];delete tupleRegistrations[rawTupleType];var elements=reg.elements;var elementsLength=elements.length;var elementTypes=elements.map(elt=>elt.getterReturnType).concat(elements.map(elt=>elt.setterArgumentType));var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;whenDependentTypesAreResolved([rawTupleType],elementTypes,function(elementTypes){elements.forEach((elt,i)=>{var getterReturnType=elementTypes[i];var getter=elt.getter;var getterContext=elt.getterContext;var setterArgumentType=elementTypes[i+elementsLength];var setter=elt.setter;var setterContext=elt.setterContext;elt.read=ptr=>getterReturnType[\"fromWireType\"](getter(getterContext,ptr));elt.write=(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}});return[{name:reg.name,\"fromWireType\":ptr=>{var rv=new Array(elementsLength);for(var i=0;i<elementsLength;++i){rv[i]=elements[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":(destructors,o)=>{if(elementsLength!==o.length){throw new TypeError(`Incorrect number of tuple elements for ${reg.name}: expected=${elementsLength}, actual=${o.length}`)}var ptr=rawConstructor();for(var i=0;i<elementsLength;++i){elements[i].write(ptr,o[i])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})};var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};function handleAllocatorInit(){Object.assign(HandleAllocator.prototype,{get(id){return this.allocated[id]},has(id){return this.allocated[id]!==undefined},allocate(handle){var id=this.freelist.pop()||this.allocated.length;this.allocated[id]=handle;return id},free(id){this.allocated[id]=undefined;this.freelist.push(id)}})}function HandleAllocator(){this.allocated=[undefined];this.freelist=[]}var emval_handles=new HandleAllocator;var __emval_decref=handle=>{if(handle>=emval_handles.reserved&&0===--emval_handles.get(handle).refcount){emval_handles.free(handle)}};var count_emval_handles=()=>{var count=0;for(var i=emval_handles.reserved;i<emval_handles.allocated.length;++i){if(emval_handles.allocated[i]!==undefined){++count}}return count};var init_emval=()=>{emval_handles.allocated.push({value:undefined},{value:null},{value:true},{value:false});emval_handles.reserved=emval_handles.allocated.length;Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles.get(handle).value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{return emval_handles.allocate({refcount:1,value:value})}}}};var __embind_register_emval=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})};var ensureOverloadTable=(proto,methodName,humanName)=>{if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`)}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}};var exposePublicSymbol=(name,value,numArguments)=>{if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(`Cannot register public name '${name}' twice`)}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`)}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}};var enumReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?function(pointer){return this[\"fromWireType\"](HEAP8[pointer>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU8[pointer>>0])};case 2:return signed?function(pointer){return this[\"fromWireType\"](HEAP16[pointer>>1])}:function(pointer){return this[\"fromWireType\"](HEAPU16[pointer>>1])};case 4:return signed?function(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}:function(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])};default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_enum=(rawType,name,size,isSigned)=>{name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,\"fromWireType\":function(c){return this.constructor.values[c]},\"toWireType\":(destructors,c)=>c.value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":enumReadValueFromPointer(name,size,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)};var createNamedFunction=(name,body)=>Object.defineProperty(body,\"name\",{value:name});var getTypeName=type=>{var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv};var requireRegisteredType=(rawType,humanName)=>{var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl};var __embind_register_enum_value=(rawEnumType,name,enumValue)=>{var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(`${enumType.name}_${name}`,function(){})}});Enum.values[enumValue]=Value;Enum[name]=Value};var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};function newFunc(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=`\\n        return function (${argsList}) {\\n        if (arguments.length !== ${argCount-2}) {\\n          throwBindingError('function ${humanName} called with ' + arguments.length + ' arguments, expected ${argCount-2}');\\n        }`;if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns||isAsync?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFn=newFunc(Function,args1).apply(null,args2);return createNamedFunction(humanName,invokerFn)}var heap32VectorToArray=(count,firstElement)=>{var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array};var replacePublicSymbol=(name,value,numArguments)=>{if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}};var dynCallLegacy=(sig,ptr,args)=>{var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)};var wasmTableMirror=[];var wasmTable;var getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func};var dynCall=(sig,ptr,args)=>{if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn};var getDynCaller=(sig,ptr)=>{var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}};var embind__requireFunction=(signature,rawFunction)=>{signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`)}return fp};var extendError=(baseErrorType,errorName)=>{var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return`${this.name}: ${this.message}`}};return errorClass};var UnboundTypeError;var throwUnboundTypeError=(message,types)=>{var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(`${message}: `+unboundTypes.map(getTypeName).join([\", \"]))};var getFunctionName=signature=>{signature=signature.trim();const argsIndex=signature.indexOf(\"(\");if(argsIndex!==-1){return signature.substr(0,argsIndex)}else{return signature}};var __embind_register_function=(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync)=>{var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);name=getFunctionName(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn,isAsync),argCount-1);return[]})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer>>0]:pointer=>HEAPU8[pointer>>0];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_value_array=(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor)=>{tupleRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),elements:[]}};var __embind_register_value_array_element=(rawTupleType,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext)=>{tupleRegistrations[rawTupleType].elements.push({getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};var _abort=()=>{abort(\"\")};var _emscripten_memcpy_js=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var ENV={};var getExecutableName=()=>thisProgram||\"./this.program\";var getEnvStrings=()=>{if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings};var stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}HEAP8[buffer>>0]=0};var PATH={isAbs:path=>path.charAt(0)===\"/\",splitPath:filename=>{var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(p=>!!p),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:path=>{var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:path=>{if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join(\"/\"))},join2:(l,r)=>PATH.normalize(l+\"/\"+r)};var initRandomFill=()=>{if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){return view=>crypto.getRandomValues(view)}else abort(\"initRandomDevice\")};var randomFill=view=>(randomFill=initRandomFill())(view);var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=PATH.isAbs(path)}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(p=>!!p),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:(from,to)=>{from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var FS_stdin_getChar_buffer=[];function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var FS_stdin_getChar=()=>{if(!FS_stdin_getChar_buffer.length){var result=null;if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}FS_stdin_getChar_buffer=intArrayFromString(result,true)}return FS_stdin_getChar_buffer.shift()};var TTY={ttys:[],init(){},shutdown(){},register(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close(stream){stream.tty.ops.fsync(stream.tty)},fsync(stream){stream.tty.ops.fsync(stream.tty)},read(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char(tty){return FS_stdin_getChar()},put_char(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}},ioctl_tcgets(tty){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets(tty,optional_actions,data){return 0},ioctl_tiocgwinsz(tty){return[24,80]}},default_tty1_ops:{put_char(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var mmapAlloc=size=>{abort()};var MEMFS={ops_table:null,mount(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup(parent,name){throw FS.genericErrors[44]},mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===HEAP8.buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync(stream,buffer,offset,length,mmapFlags){MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var asyncLoad=(url,onload,onerror,noRunDep)=>{var dep=!noRunDep?getUniqueRunDependency(`al ${url}`):\"\";readAsync(url,arrayBuffer=>{assert(arrayBuffer,`Loading data file \"${url}\" failed (no arrayBuffer).`);onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},event=>{if(onerror){onerror()}else{throw`Loading data file \"${url}\" failed.`}});if(dep)addRunDependency(dep)};var FS_createDataFile=(parent,name,fileData,canRead,canWrite,canOwn)=>{FS.createDataFile(parent,name,fileData,canRead,canWrite,canOwn)};var preloadPlugins=Module[\"preloadPlugins\"]||[];var FS_handledByPreloadPlugin=(byteArray,fullname,finish,onerror)=>{if(typeof Browser!=\"undefined\")Browser.init();var handled=false;preloadPlugins.forEach(plugin=>{if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,onerror);handled=true}});return handled};var FS_createPreloadedFile=(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(`cp ${fullname}`);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS_createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}if(FS_handledByPreloadPlugin(byteArray,fullname,finish,()=>{if(onerror)onerror();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,byteArray=>processData(byteArray),onerror)}else{processData(url)}};var FS_modeStringToFlags=str=>{var flagModes={\"r\":0,\"r+\":2,\"w\":512|64|1,\"w+\":512|64|2,\"a\":1024|64|1,\"a+\":1024|64|2};var flags=flagModes[str];if(typeof flags==\"undefined\"){throw new Error(`Unknown file open mode: ${str}`)}return flags};var FS_getMode=(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath(path,opts={}){path=PATH_FS.resolve(path);if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=path.split(\"/\").filter(p=>!!p);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?`${mount}/${path}`:mount+path}path=path?`${node.name}/${path}`:node.name;node=node.parent}},hashName(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode(node){FS.hashRemoveNode(node)},isRoot(node){return node===node.parent},isMountpoint(node){return!!node.mounted},isFile(mode){return(mode&61440)===32768},isDir(mode){return(mode&61440)===16384},isLink(mode){return(mode&61440)===40960},isChrdev(mode){return(mode&61440)===8192},isBlkdev(mode){return(mode&61440)===24576},isFIFO(mode){return(mode&61440)===4096},isSocket(mode){return(mode&49152)===49152},flagsToPermissionString(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions(node,perms){if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup(dir){var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd(){for(var fd=0;fd<=FS.MAX_OPEN_FDS;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStreamChecked(fd){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}return stream},getStream:fd=>FS.streams[fd],createStream(stream,fd=-1){if(!FS.FSStream){FS.FSStream=function(){this.shared={}};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get(){return this.node},set(val){this.node=val}},isRead:{get(){return(this.flags&2097155)!==1}},isWrite:{get(){return(this.flags&2097155)!==0}},isAppend:{get(){return this.flags&1024}},flags:{get(){return this.shared.flags},set(val){this.shared.flags=val}},position:{get(){return this.shared.position},set(val){this.shared.position=val}}})}stream=Object.assign(new FS.FSStream,stream);if(fd==-1){fd=FS.nextfd()}stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream(fd){FS.streams[fd]=null},chrdev_stream_ops:{open(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek(){throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs(populate,callback){if(typeof populate==\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`)}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup(parent,name){return parent.node_ops.lookup(parent,name)},mknod(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev(path,mode,dev){if(typeof dev==\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat(path){return FS.stat(path,true)},chmod(path,mode,dontFollow){var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod(path,mode){FS.chmod(path,mode,true)},fchmod(fd,mode){var stream=FS.getStreamChecked(fd);FS.chmod(stream.node,mode)},chown(path,uid,gid,dontFollow){var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown(path,uid,gid){FS.chown(path,uid,gid,true)},fchown(fd,uid,gid){var stream=FS.getStreamChecked(fd);FS.chown(stream.node,uid,gid)},truncate(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate(fd,len){var stream=FS.getStreamChecked(fd);if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open(path,flags,mode){if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags==\"string\"?FS_modeStringToFlags(flags):flags;mode=typeof mode==\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512&&!created){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false});if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed(stream){return stream.fd===null},llseek(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap(stream,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,length,position,prot,flags)},msync(stream,buffer,offset,length,mmapFlags){if(!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:stream=>0,ioctl(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile(path,opts={}){opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error(`Invalid encoding type \"${opts.encoding}\"`)}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile(path,data,opts={}){opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:()=>FS.currentPath,chdir(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var randomBuffer=new Uint8Array(1024),randomLeft=0;var randomByte=()=>{if(randomLeft===0){randomLeft=randomFill(randomBuffer).byteLength}return randomBuffer[--randomLeft]};FS.createDevice(\"/dev\",\"random\",randomByte);FS.createDevice(\"/dev\",\"urandom\",randomByte);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories(){FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount(){var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup(parent,name){var fd=+name;var stream=FS.getStreamChecked(fd);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1)},ensureErrnoError(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.name=\"ErrnoError\";this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit(){FS.init.initialized=false;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},findObject(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null}return ret.object},analyzePath(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath(parent,path,canRead,canWrite){parent=typeof parent==\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS_getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile(parent,name,data,canRead,canWrite,canOwn){var path=name;if(parent){parent=typeof parent==\"string\"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS_getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}},createDevice(parent,name,input,output){var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS_getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open(stream){stream.seekable=false},close(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!=\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}return intArrayFromString(xhr.responseText||\"\",true)};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size}stream_ops.read=(stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position)};stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true}};node.stream_ops=stream_ops;return node}};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=stat.mode;HEAPU32[buf+8>>2]=stat.nlink;HEAP32[buf+12>>2]=stat.uid;HEAP32[buf+16>>2]=stat.gid;HEAP32[buf+20>>2]=stat.rdev;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+24>>2]=tempI64[0],HEAP32[buf+28>>2]=tempI64[1];HEAP32[buf+32>>2]=4096;HEAP32[buf+36>>2]=stat.blocks;var atime=stat.atime.getTime();var mtime=stat.mtime.getTime();var ctime=stat.ctime.getTime();tempI64=[Math.floor(atime/1e3)>>>0,(tempDouble=Math.floor(atime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAPU32[buf+48>>2]=atime%1e3*1e3;tempI64=[Math.floor(mtime/1e3)>>>0,(tempDouble=Math.floor(mtime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>2]=tempI64[0],HEAP32[buf+60>>2]=tempI64[1];HEAPU32[buf+64>>2]=mtime%1e3*1e3;tempI64=[Math.floor(ctime/1e3)>>>0,(tempDouble=Math.floor(ctime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>2]=tempI64[0],HEAP32[buf+76>>2]=tempI64[1];HEAPU32[buf+80>>2]=ctime%1e3*1e3;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>2]=tempI64[0],HEAP32[buf+92>>2]=tempI64[1];return 0},doMsync(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(flags&2){return 0}var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},varargs:undefined,get(){var ret=HEAP32[+SYSCALLS.varargs>>2];SYSCALLS.varargs+=4;return ret},getp(){return SYSCALLS.get()},getStr(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD(fd){var stream=FS.getStreamChecked(fd);return stream}};var _environ_get=(__environ,environ_buf)=>{var bufSize=0;getEnvStrings().forEach((string,i)=>{var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0};var _environ_sizes_get=(penviron_count,penviron_buf_size)=>{var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(string=>bufSize+=string.length+1);HEAPU32[penviron_buf_size>>2]=bufSize;return 0};function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS==\"undefined\"||!(e.name===\"ErrnoError\"))throw e;return e.errno}}var doReadv=(stream,iov,iovcnt,offset)=>{var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break;if(typeof offset!==\"undefined\"){offset+=curr}}return ret};function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e.name===\"ErrnoError\"))throw e;return e.errno}}var convertI32PairToI53Checked=(lo,hi)=>hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN;function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==\"undefined\"||!(e.name===\"ErrnoError\"))throw e;return e.errno}}var doWritev=(stream,iov,iovcnt,offset)=>{var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(typeof offset!==\"undefined\"){offset+=curr}}return ret};function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e.name===\"ErrnoError\"))throw e;return e.errno}}var isLeapYear=year=>year%4===0&&(year%100!==0||year%400===0);var arraySum=(array,index)=>{var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum};var MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];var addDays=(date,days)=>{var newDate=new Date(date.getTime());while(days>0){var leap=isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate};var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var _strftime=(s,maxsize,format,tm)=>{var tm_zone=HEAPU32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":date=>WEEKDAYS[date.tm_wday].substring(0,3),\"%A\":date=>WEEKDAYS[date.tm_wday],\"%b\":date=>MONTHS[date.tm_mon].substring(0,3),\"%B\":date=>MONTHS[date.tm_mon],\"%C\":date=>{var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":date=>leadingNulls(date.tm_mday,2),\"%e\":date=>leadingSomething(date.tm_mday,2,\" \"),\"%g\":date=>getWeekBasedYear(date).toString().substring(2),\"%G\":date=>getWeekBasedYear(date),\"%H\":date=>leadingNulls(date.tm_hour,2),\"%I\":date=>{var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),\"%m\":date=>leadingNulls(date.tm_mon+1,2),\"%M\":date=>leadingNulls(date.tm_min,2),\"%n\":()=>\"\\n\",\"%p\":date=>{if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":date=>leadingNulls(date.tm_sec,2),\"%t\":()=>\"\\t\",\"%u\":date=>date.tm_wday||7,\"%U\":date=>{var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":date=>{var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":date=>date.tm_wday,\"%W\":date=>{var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":date=>(date.tm_year+1900).toString().substring(2),\"%Y\":date=>date.tm_year+1900,\"%z\":date=>{var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":date=>date.tm_zone,\"%%\":()=>\"%\"};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1};var _strftime_l=(s,maxsize,format,tm,loc)=>_strftime(s,maxsize,format,tm);var getCFunc=ident=>{var func=Module[\"_\"+ident];return func};var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var ccall=(ident,returnType,argTypes,args,opts)=>{var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};handleAllocatorInit();init_emval();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.createPreloadedFile=FS_createPreloadedFile;FS.staticInit();var wasmImports={a:___cxa_throw,m:__embind_finalize_value_array,p:__embind_register_bigint,k:__embind_register_bool,y:__embind_register_emval,z:__embind_register_enum,f:__embind_register_enum_value,j:__embind_register_float,d:__embind_register_function,e:__embind_register_integer,b:__embind_register_memory_view,h:__embind_register_std_string,g:__embind_register_std_wstring,n:__embind_register_value_array,c:__embind_register_value_array_element,l:__embind_register_void,i:_abort,x:_emscripten_memcpy_js,u:_emscripten_resize_heap,r:_environ_get,s:_environ_sizes_get,w:_fd_close,t:_fd_read,o:_fd_seek,v:_fd_write,q:_strftime_l};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"B\"])();var ___getTypeName=a0=>(___getTypeName=wasmExports[\"D\"])(a0);var ___errno_location=()=>(___errno_location=wasmExports[\"__errno_location\"])();var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"E\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"F\"])(a0);var stackSave=()=>(stackSave=wasmExports[\"G\"])();var stackRestore=a0=>(stackRestore=wasmExports[\"H\"])(a0);var stackAlloc=a0=>(stackAlloc=wasmExports[\"I\"])(a0);var ___cxa_increment_exception_refcount=a0=>(___cxa_increment_exception_refcount=wasmExports[\"__cxa_increment_exception_refcount\"])(a0);var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"J\"])(a0);var dynCall_jiji=Module[\"dynCall_jiji\"]=(a0,a1,a2,a3,a4)=>(dynCall_jiji=Module[\"dynCall_jiji\"]=wasmExports[\"K\"])(a0,a1,a2,a3,a4);var dynCall_viijii=Module[\"dynCall_viijii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_viijii=Module[\"dynCall_viijii\"]=wasmExports[\"L\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=wasmExports[\"M\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=wasmExports[\"N\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=wasmExports[\"O\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nexport default Module;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
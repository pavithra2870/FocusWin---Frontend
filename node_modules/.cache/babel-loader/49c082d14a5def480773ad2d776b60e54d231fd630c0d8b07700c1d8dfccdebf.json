{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst User = require('../../server/models/User.js');\n\n// Login Route\nrouter.post('/', async (req, res) => {\n  const {\n    email,\n    password\n  } = req.body;\n  if (!email || !password) {\n    return res.status(400).json({\n      error: 'Email and password are required'\n    });\n  }\n  try {\n    const user = await User.findOne({\n      email\n    });\n    if (!user || user.password !== password) {\n      return res.status(401).json({\n        error: 'Invalid credentials'\n      });\n    }\n    req.session.userId = user._id;\n    res.json({\n      message: 'Login successful',\n      user: {\n        id: user._id,\n        email: user.email,\n        name: user.name\n      }\n    });\n  } catch (err) {\n    console.error('Login Error:', err.message);\n    res.status(500).json({\n      error: 'Server error'\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","User","post","req","res","email","password","body","status","json","error","user","findOne","session","userId","_id","message","id","name","err","console","module","exports"],"sources":["C:/Users/Ranga/Documents/ToDo/client/src/Login.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst User = require('../../server/models/User.js');\r\n\r\n// Login Route\r\nrouter.post('/', async (req, res) => {\r\n  const { email, password } = req.body;\r\n\r\n  if (!email || !password) {\r\n    return res.status(400).json({ error: 'Email and password are required' });\r\n  }\r\n\r\n  try {\r\n    const user = await User.findOne({ email });\r\n    if (!user || user.password !== password) {\r\n      return res.status(401).json({ error: 'Invalid credentials' });\r\n    }\r\n\r\n    req.session.userId = user._id;\r\n    res.json({\r\n      message: 'Login successful',\r\n      user: { id: user._id, email: user.email, name: user.name }\r\n    });\r\n  } catch (err) {\r\n    console.error('Login Error:', err.message);\r\n    res.status(500).json({ error: 'Server error' });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,IAAI,GAAGH,OAAO,CAAC,6BAA6B,CAAC;;AAEnD;AACAC,MAAM,CAACG,IAAI,CAAC,GAAG,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACnC,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGH,GAAG,CAACI,IAAI;EAEpC,IAAI,CAACF,KAAK,IAAI,CAACC,QAAQ,EAAE;IACvB,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAkC,CAAC,CAAC;EAC3E;EAEA,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMV,IAAI,CAACW,OAAO,CAAC;MAAEP;IAAM,CAAC,CAAC;IAC1C,IAAI,CAACM,IAAI,IAAIA,IAAI,CAACL,QAAQ,KAAKA,QAAQ,EAAE;MACvC,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAsB,CAAC,CAAC;IAC/D;IAEAP,GAAG,CAACU,OAAO,CAACC,MAAM,GAAGH,IAAI,CAACI,GAAG;IAC7BX,GAAG,CAACK,IAAI,CAAC;MACPO,OAAO,EAAE,kBAAkB;MAC3BL,IAAI,EAAE;QAAEM,EAAE,EAAEN,IAAI,CAACI,GAAG;QAAEV,KAAK,EAAEM,IAAI,CAACN,KAAK;QAAEa,IAAI,EAAEP,IAAI,CAACO;MAAK;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACV,KAAK,CAAC,cAAc,EAAES,GAAG,CAACH,OAAO,CAAC;IAC1CZ,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAe,CAAC,CAAC;EACjD;AACF,CAAC,CAAC;AAEFW,MAAM,CAACC,OAAO,GAAGvB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}